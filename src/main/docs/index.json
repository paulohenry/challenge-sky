{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "SKY Challenge",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "paulo.junior.engenheiro@gmail.com"
    },
    "license": {
      "name": "Apache",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "API que descreve os endpoints necessários ao consumo do frontend"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local Server"
    }
  ],
  "tags": [
    { "name": "Session", "description": "Operations about log in with a  User" },
    { "name": "CRUD", "description": "Operations about user" },
    { "name": "Register", "description": "Register one new user" }
  ],
  "security": {
    "bearerAuth": []
  },
  "schemes": ["http"],
  "paths": {
    "/signin": {
      "post": {
        "tags": ["Session"],
        "summary": "Log in  user with account",
        "description": "here you may log in for get your token, so click **try it out**",
        "operationId": "loginUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginUser"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Log in with success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithToken"
                }
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/UnauthorizedError"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/signup": {
      "post": {
        "tags": ["Register"],
        "summary": "Register user account",
        "description": "here you may register user, so click **try it out**",
        "operationId": "registerUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUser"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "register With Success",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/get-one-user": {
      "get": {
        "tags": ["CRUD"],
        "summary": "get One User",
        "description": "swagger não foi finalizado, pode ser chamado via postman",
        "operationId": "getUser",
        "responses": {
          "201": {
            "description": "register With Success",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "in": "header",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "responses": {
      "UnauthorizedError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "example": 403
          },
          "message": {
            "type": "string",
            "example": "Requisição não autorizada"
          }
        },
        "description": "return this error case client don't send bearer token in header"
      },
      "ServerError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "example": 500
          },
          "message": {
            "type": "string",
            "example": "Erro Interno"
          }
        },
        "description": "return this error case api crash"
      }
    },
    "schemas": {
      "RegisterUser": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "admin@admin.com",
            "description": "follow format pattern format email **this is required** "
          },
          "nome": {
            "type": "string",
            "example": "João"
          },
          "senha": {
            "type": "string",
            "example": "qwertY@12"
          },
          "telefones": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "ddd": {
                  "type": "string",
                  "example": "13"
                },
                "numero": {
                  "type": "string",
                  "example": "999999999"
                }
              }
            }
          }
        }
      },
      "LoginUser": {
        "type": "object",
        "required": ["email", "senha"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "admin@admin.com",
            "description": "follow format pattern format email **this is required** "
          },
          "senha": {
            "type": "password",
            "example": "qwertY@12",
            "description": "need have just 1 Uppercase letter 1 number 1 special caractere and minimal 8 digits **this is required**"
          }
        }
      },
      "ResponseWithToken": {
        "type": "object",
        "properties": {}
      },
      "ErrorsMessages": {
        "type": "object",
        "description": "pattern of messages errors",
        "properties": {
          "code": {
            "type": "integer",
            "example": 500,
            "description": "Code of errors, may a have 400,403,500"
          },
          "message": {
            "type": "string",
            "example": "Erro Interno"
          }
        }
      },
      "SuccessfullyMessages": {
        "type": "object",
        "description": "pattern messages of successfully",
        "properties": {
          "code": {
            "type": "integer",
            "example": 204,
            "description": "Code of success, may a have 200,201,204"
          },
          "message": {
            "type": "string",
            "example": "Usuário deletado com sucesso"
          }
        }
      }
    }
  }
}
